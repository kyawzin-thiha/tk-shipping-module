generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PStatus {
  CREATED
  PARTIAL_IN_BOX
  ALL_IN_BOX
  SHIPPED
}

enum BStatus {
  CREATED
  SHIPPED
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  email     String   @unique
  username  String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id                String       @id @default(cuid()) @map("_id")
  name              String
  description       String
  po                String?      @default("")
  shopvox           String?      @default("")
  salesOrder        String?      @default("")
  qty               Int
  shipBy            DateTime
  shippingMethod    String?      @default("courier")
  status            PStatus      @default(CREATED)
  customFields      String?      @default("")
  isManual          Boolean      @default(false)
  billingAddress    String
  shippingAddress   String
  billingContactId  String?
  billingContact    Customer?    @relation(name: "billing-contact", fields: [billingContactId], references: [id])
  shippingContactId String?
  shippingContact   Customer?    @relation(name: "shipping-contact", fields: [shippingContactId], references: [id])
  boxes             BoxContent[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model Customer {
  id        String    @id @default(cuid()) @map("_id")
  name      String
  company   String
  street    String
  city      String
  state     String
  zip       String
  country   String
  billedTo  Product[] @relation(name: "billing-contact")
  shippedTo Product[] @relation(name: "shipping-contact")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Box {
  id        String       @id @default(cuid()) @map("_id")
  name      String?      @default("")
  status    BStatus      @default(CREATED)
  contents  BoxContent[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model BoxContent {
  id        String   @id @default(cuid()) @map("_id")
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  qty       Int
  boxId     String
  box       Box      @relation(fields: [boxId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
